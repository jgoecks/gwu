<tool id="makevcf" name="Construct a VCF">
  <description> using outputs from VarScan</description>
  <command>
    makeVCF.pl "$snp" "$ind" "$pil" temp0 "$qual" "$lab";

    ## analyze singletons
    #if str( $filter.filter_opt ) == "yes":
      filterVCF.pl temp0 "$filter.bed" temp1;

      #if str( $addhp.addhp_opt ) == "yes":
        addHPtoVCF.pl temp1 "$addhp.gen.fields.path" "$out"
        #if str( $addhp.log_opt ) == "true":
          "$log"
        #end if
      #else
        mv temp1 "$out"
      #end if

    #else
      #if str( $addhp.addhp_opt ) == "yes":
        addHPtoVCF.pl temp0 "$addhp.gen.fields.path" "$out"
        #if str( $addhp.log_opt ) == "true":
          "$log"
        #end if
      #else
        mv temp0 "$out"
      #end if
    #end if

  </command>
  <inputs>
    <param format="tabular" name="snp" type="data" label="Output from VarScan pileup2snp"/>
    <param format="tabular" name="ind" type="data" label="Output from VarScan pileup2indel"/>
    <param format="pileup" name="pil" type="data" label="Pileup file used with VarScan"/>
    <param name="qual" type="integer" value="15" min="0" label="Minimum quality score used with VarScan"/>
    <param name="lab" type="text" value="sample" label="Sample name for header of VCF"/>

    <conditional name="filter">
      <param name="filter_opt" type="select" label="Would you like to remove variants from outside amplicon target regions?">
        <option value="no" selected="True">No</option>
        <option value="yes">Yes</option>
      </param>
      <when value="yes">
        <param format="bed" name="bed" type="data" label="File listing primer locations"/>
      </when>
      <when value="no"/>
    </conditional>

    <conditional name="addhp">
      <param name="addhp_opt" type="select" label="Would you like to have lengths of adjacent homopolymers for each variant added to the VCF?">
        <option value="no" selected="True">No</option>
        <option value="yes">Yes</option>
      </param>
      <when value="yes">
        <param format="fasta" name="gen" type="select" label="Reference genome">
          <options from_data_table="all_fasta"/>
        </param>
        <param name="log_opt" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Would you like an output log file?" help="The log file lists information about each variant, including the genome segments analyzed."/>
      </when>
      <when value="no"/>
    </conditional>

  </inputs>

  <outputs>
    <data format="vcf" name="out" label="${tool.name} on ${on_string}: VCF file"/>
    <data format="tabular" name="log" label="${tool.name} on ${on_string}: HP log file">
      <filter>addhp['addhp_opt'] == "yes" and addhp['log_opt'] is True</filter>
    </data>
  </outputs>

  <help>
This tool constructs a single VCF from the outputs of the VarScan commands
"pileup2snp" and "pileup2indel". In addition, it can remove variants that
fall outside of the target regions, and it can add lengths of adjacent
homopolymers for each variant (see below).

-----

**Adjacent homopolymer**

When this option is selected, the tool adds an "HP=x" info field to each
variant, where x is the length of the homopolymer adjacent to a variant
that matches it.

For example, given the following C -> T variant::

  TCAGTCATTTCACACCAGCAA
  TCAGTCATTTTACACCAGCAA
            *

The variant base, T, is adjacent to a homopolymer of three Ts, so the new VCF
record will have "HP=3" in it.

Note that, except for deletions, the variant base must match the homopolymer. 
That is, if the above variant had been C -> G, the result would have been "HP=0".

Complex variants containing nonmatching variant bases are not evaluated, and
are given the default "HP=0".

  </help>

</tool>
